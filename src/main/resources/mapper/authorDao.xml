<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.dm.dao.AuthorDao">

    <cache
            eviction="FIFO"
            flushInterval="60000"
            size="512"
            readOnly="true"/>

    <resultMap id="authorResult" type="author">
        <constructor>
            <idArg column="id" javaType="int"/>
            <arg column="name" javaType="string"/>
            <arg column="age" javaType="int"/>
        </constructor>
        <id property="id" column="id"/>
        <result property="name" column="name" />
        <result property="age" column="age"/>
    </resultMap>

<!--    resultMap 、resultType 区别
        resultMap功能更强一些，可以指定表字段和实体对象的对应关系，一般建议用这个
        resultType=map 表字段必须和返回的实体对象字段一样才能映射出来
-->
    <select id="findAuthorMap" resultMap="authorResult" parameterType="int">
        select * from t_author
        <where>
            <if test="authorId != null">
                id=#{authorId}
            </if>
        </where>
    </select>

    <select id="getAuthorById" resultType="author" parameterType="int">
        select * from t_author
        <where>
            <if test="authorId != null">
                id=#{authorId}
            </if>
        </where>
    </select>

    <!-- 作者 自动主键-->
    <insert id="addAuthor" parameterType="author">
        INSERT INTO t_author (
        name,
        age)
        VALUES   (#{name},
        #{age})
    </insert>

</mapper>